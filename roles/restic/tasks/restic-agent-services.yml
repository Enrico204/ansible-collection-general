- name: "Create new restic agent executable for service {{ service.name }}"
  become: true
  template:
    src: restic-agent-services.sh.j2
    dest: "/usr/local/sbin/restic-agent-{{ service.name }}"
    owner: root
    group: root
    mode: '0700'
  when: "(service.state | default('present')) == 'present' and not restic_stdin_experiment"

- name: "Create new restic agent executable for service {{ service.name }} (experiment)"
  become: true
  template:
    src: restic-agent-services-test.sh.j2
    dest: "/usr/local/sbin/restic-agent-{{ service.name }}"
    owner: root
    group: root
    mode: '0700'
  when: "(service.state | default('present')) == 'present' and restic_stdin_experiment"

# Anacron
- name: "Create anacron entry for backup for service {{ service.name }}"
  become: true
  copy:
    dest: /etc/cron.daily/restic-agent-{{ service.name }}
    content: |-
      #!/usr/bin/env bash
      /usr/local/sbin/restic-agent-{{ service.name }} -cron | ts '%FT%T%z'
      exit $?
    owner: root
    group: root
    mode: '0700'
  when: "restic_agent_cron == 'anacron' and (service.when is not defined or service.when != 'never') and (service.state | default('present')) == 'present'"

- name: Remove old anacron entry for backup for service {{ service.name }}"
  become: true
  file:
    path: /etc/cron.daily/restic-agent-{{ service.name }}
    state: absent
  when: "restic_agent_cron != 'anacron' or (service.when is defined and service.when == 'never') or (service.state | default('present')) == 'absent'"

# Cron
- name: Remove cronjob entry for service {{ service.name }}"
  become: true
  ansible.builtin.cron:
    name: "restic-agent-{{ service.name }}"
    state: absent
  when: "restic_agent_cron != 'cron' or (service.when is defined and service.when == 'never') or (service.state | default('present')) == 'absent'"

- name: "Create cronjob for backup for service {{ service.name }}"
  become: true
  ansible.builtin.cron:
    name: "restic-agent-{{ service.name }}"
    minute: "{{ service.when.minute | default(0) }}"
    hour: "{{ service.when.hour | default(2) }}"
    weekday: "{{ service.when.weekday | default('*') }}"
    month: "{{ service.when.month | default('*') }}"
    day: "{{ service.when.day | default('*') }}"
    job: "/bin/bash -eou pipefail -c \"/usr/local/sbin/restic-agent-{{ service.name }} -cron | ts '%FT%T%z'\""
  when: "restic_agent_cron == 'cron' and (service.when is not defined or service.when != 'never') and (service.state | default('present')) == 'present'"
