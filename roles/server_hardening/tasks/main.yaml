- name: check fw_iptables and fw_nftables
  fail:
    msg: Can't have both fw_iptables and fw_nftables at the same time
  when: fw_iptables and fw_nftables

- name: Harden SSH
  include_tasks: ssh.yaml
  when: ssh_hardening

- name: Add molly-guard
  include_tasks: molly-guard.yaml
  when: molly_guard

- name: firewall blacklists/whitelists
  include_tasks: fw_lists.yaml
  when: (fw_blacklists | length) > 0 or (fw_whitelists | length) > 0

- name: iptables firewall
  include_tasks: iptables.yaml
  when: fw_iptables

- name: nftables firewall
  include_tasks: nftables.yaml
  when: fw_nftables

- name: secure cron files
  include_tasks: cron.yaml
  when: secure_cron

- name: core dumps
  include_tasks: coredumps.yaml
  when: disable_core_dumps

- name: APT
  include_tasks: apt.yaml
  when: ansible_os_family == 'Debian'

- name: banner
  include_tasks: banner.yaml

- name: Chrony
  include_tasks: ntp-chrony.yaml
  when: ntp_client == "chrony" and not (ansible_virtualization_role == 'guest' and (ansible_virtualization_type == 'lxc' or ansible_virtualization_type == 'docker'))

- name: Systemd timesyncd
  include_tasks: ntp-timesyncd.yaml
  when: ntp_client == "timesyncd" and not (ansible_virtualization_role == 'guest' and (ansible_virtualization_type == 'lxc' or ansible_virtualization_type == 'docker'))

# TODO: timezone when no systemd is available
- name: Get current timezone
  become: true
  command: timedatectl show -p Timezone --value
  changed_when: false
  register: timedatecmd
  when: 'ntp_timezone != ""'

- name: Set timezone
  become: true
  command: "timedatectl set-timezone {{ ntp_timezone }}"
  changed_when: false
  when: 'ntp_timezone != "" and ntp_timezone != timedatecmd.stdout'

- name: rkhunter
  include_tasks: rkhunter.yaml
  when: rkhunter_enabled

- name: auditd
  include_tasks: auditd.yaml
  when: auditd_enabled and not (ansible_virtualization_role == 'guest' and (ansible_virtualization_type == 'lxc' or ansible_virtualization_type == 'docker'))

- name: Ubuntu-specific
  include_tasks: ubuntu.yaml
  when: ansible_distribution == 'Ubuntu'

- name: cleanup
  include_tasks: cleanup.yaml
